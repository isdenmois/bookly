schema {
    query: Query
    mutation: Mutation
}

type UserChallenge {
    count_books_forecast: Int
    count_books_read: Int
    status_id: Int
    count_books_total: Int
}

type UserBookPartial {
    book_read: Int
}

type Book {
    id: ID!
    author_id: Int
    author_name: String
    name: String
    avg_mark: Float
    pic_70: String
    pic_100: String
    pic_140: String
    pic_200: String
    user_book_partial: UserBookPartial
}

type ChangeStatusParams {
    id: ID!
}

type Query {
    userChallenge(user: ID!, year: Int!): UserChallenge
    userBooks(user: ID!, start: Int, count:  Int, type: String): [Book]
}

type Mutation {
    changeStatus(bookId: ID!, book_read: Int!, date_day: Int, date_month: Int, date_year: Int, rating: Int): Book!
}
